use backend::{planetscale::PlanetScaleConfig, Error, ErrorKind, Result};

#[tokio::main]
async fn main() -> Result<()> {
    let config = if let Ok(config) = PlanetScaleConfig::new("/home/izznatsir/.config/planetscale") {
        config
    } else {
        return Err(Error::new(ErrorKind::Unauthenticated));
    };

    Ok(())
}

/// PlanetScale GUI tool that simplify your local development workflow.
#[derive(clap::Parser)]
#[clap(about, long_about=None, version)]
struct Cli {
    #[clap(subcommand)]
    command: Command,

    /// PlanetScale CLI config directory. Defaults to $HOME/.config/planetscale.
    #[clap(long, value_parser)]
    config_dir: Option<String>,

    /// Use custom service token instead of the default token generated by `pscale auth login`.
    #[clap(long, value_parser)]
    service_token: Option<String>,
}

#[derive(clap::Subcommand)]
enum Command {
    /// Start the Voyager server on local network, this is the default command.
    Start,
}
